import type { NextPage } from 'next';
import Head from 'next/head';
import { useState } from 'react';
import CardGeneratorPage from '../components/CardGeneratorPage';
import Faq from '../components/Landing/Faq';
import Footer from '../components/Landing/Footer';
import InfoGroup from '../components/Landing/InfoGroup';
import InfoGroup2 from '../components/Landing/InfoGroup2';
import LandingBottom from '../components/Landing/LandingBottom';
import LandingTop from '../components/Landing/LandingTop';
import Navbar from '../components/Landing/Navbar';
import { MainContext } from '../components/utils/context';

const Home: NextPage = () => {
  // Defination of the context
  const [selectedLanguages, setSelectedLanguages] = useState([
    'English',
    'French',
  ]);

  const [selectedCard, setSelectedCard] = useState<number>(2);
  const [size, setSize] = useState<number>(0);
  const [position, setPosition] = useState<number>(5);
  const [color, setColor] = useState<string>('bg-violet-600');

  const [contentInputs, setContentInputs] = useState({
    contentInput1: '',
    contentInput2: '',
    contentInput3: '',
    contentInput4: '',
    contentInput5: '',
    contentInput6: '',
    contentInput7: '',
    contentInput8: '',
    contentInput9: '',
    contentInput10: '',
    contentInput11: '',
  });

  const [uploadedImage, setUploadedImage] = useState<string>();
  const [uploadedLogo, setUploadedLogo] = useState<string>();

  interface ITargetingRules {
    visitorDevice: boolean;
    visitorDeviceType: string;
    afterSecond: boolean;
    afterSecondValue: number;
    afterScroll: boolean;
    afterScrollValue: number;
    trafficSource: boolean;
    trafficSourceValue: string;
    browserLanguage: boolean;
    exitIntentTargeting: boolean;
  }

  const [targetingRules, setTargetingRules] = useState<ITargetingRules>({
    visitorDevice: true,
    visitorDeviceType: 'desktop',
    afterSecond: true,
    afterSecondValue: 12,
    afterScroll: true,
    afterScrollValue: 50,
    trafficSource: true,
    trafficSourceValue: '',
    browserLanguage: true,
    exitIntentTargeting: true,
  });

  interface ISettingsAndCode {
    webhook: string;
    sendFromSubmission: boolean;
    sendClickData: boolean;
  }

  const [settingsAndCode, setSettingsAndCode] = useState<ISettingsAndCode>({
    webhook: '',
    sendFromSubmission: true,
    sendClickData: false,
  });

  const [showCode, setShowCode] = useState(false);

  const data = {
    selectedLanguages,
    setSelectedLanguages,
    selectedCard,
    setSelectedCard,
    size,
    setSize,
    position,
    setPosition,
    color,
    setColor,
    contentInputs,
    setContentInputs,
    targetingRules,
    setTargetingRules,
    settingsAndCode,
    setSettingsAndCode,
    uploadedImage,
    setUploadedImage,
    uploadedLogo,
    setUploadedLogo,
    showCode,
    setShowCode,
  };

  // Defination of the context

  return (
    <MainContext.Provider value={data}>
      <div className="body w-full h-full mx-auto">
        <div>
          <Head>
            <title>Simple Popup Builder That Boosts Sales | Popupsmart</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="https://popupsmart.com/favicon.ico" />
            <meta
              name="viewport"
              content="width=device-width, initial-scale=1.0"
            />
          </Head>
          <main>
            <div className="  mx-auto bg-gradient-to-t from-[#E3F2F7] to-white h-[56.87rem]">
              <div className=" w-full max-w-screen-xl mt-4 bg-transparent mx-auto h-[56.87rem]">
                <Navbar />
                <LandingTop />
              </div>
            </div>
            <div className=" bg-[#666666] h-[39.37rem] mx-auto">
              <div className=" w-full secondArea h-[39.37rem] max-w-screen-xl mx-auto">
                <LandingBottom />
              </div>
            </div>
            <div className="mx-auto max-w-screen-xl">
              <CardGeneratorPage />
              <InfoGroup />
              <Faq />
              <InfoGroup2 />
              <Footer />
            </div>
          </main>
        </div>
      </div>
    </MainContext.Provider>
  );
};

export default Home;
